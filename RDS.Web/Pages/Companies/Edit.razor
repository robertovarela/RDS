@page "/empresas/editar"
@inherits EditCompanyPage

<AuthorizeView Roles="Owner">
    <Authorized>
        <div class="d-flex justify-end pt-2 pb-2 mt-2 mb-2">
            <MudButton
                Class="pt-2 pb-2"
                Variant="Variant.Filled"
                Color="Color.Primary"
                StartIcon="@Icons.Material.TwoTone.Add"
                OnClick="@(() => NavigationService.NavigateTo(AddEmployeeUrl))">
                ADICIONAR FUNCIONÁRIO
            </MudButton>
        </div>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="Admin, Owner">
    <Authorized>
        @if (IsBusy)
        {
            <MudPaper Class="pa-8 mt-4">
                <MudSkeleton Height="55px"/>
                <MudSkeleton Height="110px"/>
                <MudSkeleton Height="55px"/>
                <MudSkeleton Height="110px"/>
                <MudSkeleton Height="55px"/>
            </MudPaper>
        }
        else
        {
            <EditForm Model="@InputModel" OnValidSubmit="OnValidSubmitAsync" Context="editContext">
                    <MudPaper Class="pa-8 mt-4">
                        <DataAnnotationsValidator/>

                        <MudTextField Label="Título"
                                      HelperText="Campo obrigatório"
                                      @bind-Value="InputModel.Name"
                                      For="@(() => InputModel.Name)"/>

                        <MudTextField Label="Descrição"
                                      HelperText="Campo obrigatório"
                                      @bind-Value="InputModel.Description"
                                      For="@(() => InputModel.Description)"/>
                    </MudPaper>
                    <MudSpacer/>
                <SaveAndCancelButtons CancelOrBackPage="@BackUrl"/>
            </EditForm>
        }
    </Authorized>
    <NotAuthorized>
        @(async () => await NavigationService.NavigateToAccessNotAllowedAsync())
    </NotAuthorized>
</AuthorizeView>