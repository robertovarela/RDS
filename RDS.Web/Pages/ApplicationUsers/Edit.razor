@page "/usuarios/editar"
@inherits EditApplicationUsersPage

<!--<UserState/>-->
<AuthorizeView>
    <Authorized>
        @if (IsBusy)
        {
            <MudPaper Class="pa-8 mt-4">
                <MudSkeleton Height="55px"/>
                <MudSkeleton Height="110px"/>
                <MudSkeleton Height="110px"/>
                <MudSkeleton Height="55px"/>
                <MudSkeleton Height="55px"/>
            </MudPaper>
        }
        else
        {
            <MudPaper Class="mud-data-grid pa-8 mt-4">
                <EditForm Model="@InputModel" OnValidSubmit="OnUpdateButtonClickedAsync" Context="editContext">
                    <DataAnnotationsValidator/>

                    <MudTextField Label="Código"
                                  HelperText="&nbsp;"
                                  @bind-Value="InputModel.UserId"
                                  For="@(() => InputModel.UserId)"
                                  Variant="Variant.Outlined"
                                  Disabled/>

                    <MudTextField Label="E-mail"
                                  HelperText="Campo obrigatório"
                                  @bind-Value="InputModel.Email"
                                  For="@(() => InputModel.Email)"
                                  Variant="Variant.Outlined"
                                  Disabled="true"/>

                    <MudTextField Label="Nome"
                                  HelperText="Campo obrigatório"
                                  @bind-Value="InputModel.Name"
                                  For="@(() => InputModel.Name)"
                                  Variant="Variant.Outlined"
                                  Disabled="IsNotEdit"
                                  AutoFocus/>

                    <MudTextField Label="CPF"
                                  HelperText="&nbsp;"
                                  @bind-Value="InputModel.Cpf"
                                  For="@(() => InputModel.Cpf)"
                                  Disabled="IsNotEdit"
                                  Variant="Variant.Outlined"/>

                    <MudDatePicker Label="Data de Nascimento"
                                   @ref="Picker"
                                   @bind-Date="@InputModel.BirthDateAsDateTime"
                                   HelperText="Selecione a data de nascimento"
                                   Orientation="Orientation.Portrait"
                                   MinDate="MinDate"
                                   MaxDate="MaxDate"
                                   Variant="Variant.Outlined"
                                   ShowToolbar="false"
                                   Color="Color.Success"
                                   Rounded="true"
                                   PickerVariant="PickerVariant.Dialog"
                                   Elevation="12"
                                   Class="datepicker-custom"
                                   Disabled="IsNotEdit"/>

                    <MudPaper Class="pa-2">
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <MudSpacer/>
                            <MudPaper Class="pa-2 bg-appbarbackground" Style="margin-right: 8px;">
                                <MudButton Class="pa-4" ButtonType="ButtonType.Button"
                                           Variant="Variant.Outlined"
                                           Color="Color.Surface"
                                           OnClick="@(() => StartService.LinkToUrlUser(UserAddressUrl, UserId))">
                                    Endereços
                                </MudButton>
                            </MudPaper>
                            <MudSpacer/>
                            <MudPaper Class="pa-2 bg-appbarbackground" Style="margin-left: 8px;">
                                <MudButton Class="pa-4" ButtonType="ButtonType.Button"
                                           Variant="Variant.Outlined"
                                           Color="Color.Surface"
                                           OnClick="@(() => NavigationService.NavigateTo(UserPhoneUrl))">
                                    Telefones
                                </MudButton>
                            </MudPaper>
                            <MudSpacer/>
                        </div>
                    </MudPaper>
                    <SaveAndCancelButtons CancelPage="/" Button1Text="Cancelar" Button2Text="Atualizar" Button2Disable="IsNotEdit"/>
                </EditForm>
            </MudPaper>
        }
    </Authorized>
    <NotAuthorized>
        @(async () => await NavigationService.NavigateToAccessNotAllowedAsync())
    </NotAuthorized>
</AuthorizeView>