<div class="d-flex justify-center pb-8 pt-2">
    <img src="/imgs/RDS-01.jpg" alt="RDS - Soluções em software" width="200"/>
</div>

<AuthorizeView Roles="Admin">
    <Authorized>
        <MudNavMenu Margin="Margin.None" Color="Color.Success" Rounded="true" Dense="true" Class="responsive-text drawer-title">
            <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/"))" Icon="@Icons.Material.Filled.Home" IconColor="Color.Success">Início</MudNavLink>


            <MudNavGroup Title="Gerenciamento" Class="px-4" Icon="@Icons.Material.Filled.Class" IconColor="Color.Warning"
                         Expanded="@(_expandedGroup == "Manager")" ExpandedChanged="@(() => ToggleGroup("Manager"))">

                <MudNavGroup Title="Usuários" Class="px-4" Icon="@Icons.Material.Filled.PeopleOutline" IconColor="Color.Success"
                             Expanded="@(_expandedGroup == "SubUsers")" ExpandedChanged="@(() => ToggleGroup("SubUsers"))">

                    <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/usuarios"))" Class="responsive-text drawer-subtitle" 
                                Icon="@Icons.Material.Filled.People" IconColor="Color.Success">Lista</MudNavLink>
                    <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/usuarios/editar"))" Class="responsive-text drawer-subtitle" 
                                Icon="@Icons.Material.Filled.Person" IconColor="Color.Success">Meu Cadastro</MudNavLink>

                </MudNavGroup>

                <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/categorias"))" Class="responsive-text drawer-subtitle" 
                            Icon="@Icons.Material.Filled.Category" IconColor="Color.Info">Categorias</MudNavLink>
                <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/lancamentos/historico"))" Class="responsive-text drawer-subtitle" 
                            Icon="@Icons.Material.Filled.History" IconColor="Color.Warning">Transações</MudNavLink>

            </MudNavGroup>

            <MudNavGroup Title="Configurações" Class="px-4" Icon="@Icons.Material.Filled.Settings" IconColor="Color.Error"
                         Expanded="@(_expandedGroup == "Configurations")" ExpandedChanged="@(() => ToggleGroup("Configurations"))">

                <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/finger"))" Class="responsive-text drawer-subtitle"
                            Icon="@Icons.Material.Filled.Devices" IconColor="Color.Warning">Finger Print</MudNavLink>
                <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/usuariosconfiguracao/roles"))" Class="responsive-text drawer-subtitle"
                            Icon="@Icons.Material.Filled.Assignment" IconColor="Color.Error">Roles</MudNavLink>
                <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/usuariosconfiguracao/lista-usuarios-roles"))" Class="responsive-text drawer-subtitle"
                            Icon="@Icons.Material.Filled.AssignmentInd" IconColor="Color.Error">User Roles</MudNavLink>

            </MudNavGroup>

            <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/sair"))" Icon="@Icons.Material.Filled.Logout" IconColor="Color.Error">Sair</MudNavLink>
        </MudNavMenu>
    </Authorized>
    <NotAuthorized>
        <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/login"))" Icon="@Icons.Material.Filled.Login" IconColor="Color.Success">Login</MudNavLink>
        <MudNavLink OnClick="@(() => NavigationService.NavigateTo("/registrar"))" Icon="@Icons.Material.Filled.Add" IconColor="Color.Success">Registrar</MudNavLink>
    </NotAuthorized>
</AuthorizeView>

<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">

@code{

    //[Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;
    
    private string? _expandedGroup = null;
    private string? _expandedSubGroup = null;
    //private string roles = "";

    private void ToggleGroup(string groupName)
    {
        if (groupName.StartsWith("Sub"))
        {
            if (_expandedSubGroup == groupName)
            {
                _expandedSubGroup = null;
            }
            else
            {
                _expandedSubGroup = groupName;
            }
        }
        else
        {
            if (_expandedGroup == groupName)
            {
                _expandedGroup = null;
            }
            else
            {
                _expandedGroup = groupName;
                _expandedSubGroup = null;
            }
        }
    }
    
    // protected override async Task OnInitializedAsync()
    // {
    //     var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     var user = authState.User;
    //
    //     if (user.Identity != null && user.Identity.IsAuthenticated)
    //     {
    //         var rolesList = user.Claims
    //             .Where(c => c.Type == ClaimTypes.Role)
    //             .Select(c => c.Value)
    //             .ToList();
    //         roles = string.Join(", ", rolesList);
    //
    //         Console.WriteLine($"Roles do usuário autenticado: {roles}");
    //     }
    //     else
    //     {
    //         roles = "Usuário não autenticado";
    //         Console.WriteLine(roles);
    //     }
    //
    // }
}